"""initial migration

Revision ID: 64a12fe66c3f
Revises: 
Create Date: 2025-09-15 15:54:57.055261

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision: str = '64a12fe66c3f'
down_revision: Union[str, Sequence[str], None] = None
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('categorias_productos',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('nombre', sa.String(length=100), nullable=False),
    sa.Column('descripcion', sa.String(length=250), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('updated_at', sa.DateTime(), nullable=False),
    sa.Column('is_active', sa.Boolean(), nullable=False),
    sa.PrimaryKeyConstraint('id')
    )
    with op.batch_alter_table('categorias_productos', schema=None) as batch_op:
        batch_op.create_index(batch_op.f('ix_categorias_productos_nombre'), ['nombre'], unique=True)

    op.create_table('clientes',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('nombre', sa.String(length=150), nullable=False),
    sa.Column('telefono', sa.String(length=20), nullable=True),
    sa.Column('correo', sa.String(length=50), nullable=True),
    sa.Column('ruc', sa.String(length=20), nullable=True),
    sa.Column('dni', sa.String(length=8), nullable=True),
    sa.Column('direccion', sa.Text(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('updated_at', sa.DateTime(), nullable=False),
    sa.Column('is_active', sa.Boolean(), nullable=False),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('correo'),
    sa.UniqueConstraint('dni'),
    sa.UniqueConstraint('ruc'),
    sa.UniqueConstraint('telefono')
    )
    with op.batch_alter_table('clientes', schema=None) as batch_op:
        batch_op.create_index(batch_op.f('ix_clientes_nombre'), ['nombre'], unique=False)

    op.create_table('formas_pago',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('tipo', sa.Enum('EFECTIVO', 'TARJETA', 'TRANSFERENCIA', 'YAPE', 'PLIN', name='tipopagoenum'), nullable=False),
    sa.Column('cargo_extra', sa.Numeric(precision=5, scale=2), nullable=False),
    sa.Column('is_active', sa.Boolean(), nullable=False),
    sa.CheckConstraint('cargo_extra >= 0', name='check_cargo_extra_no_negativo'),
    sa.PrimaryKeyConstraint('id')
    )
    with op.batch_alter_table('formas_pago', schema=None) as batch_op:
        batch_op.create_index(batch_op.f('ix_formas_pago_tipo'), ['tipo'], unique=True)

    op.create_table('proveedores',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('nombre', sa.String(length=100), nullable=False),
    sa.Column('ruc', sa.String(length=20), nullable=True),
    sa.Column('telefono', sa.String(length=20), nullable=True),
    sa.Column('correo', sa.String(length=50), nullable=True),
    sa.Column('direccion', sa.Text(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('updated_at', sa.DateTime(), nullable=False),
    sa.Column('is_active', sa.Boolean(), nullable=False),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('correo'),
    sa.UniqueConstraint('ruc'),
    sa.UniqueConstraint('telefono')
    )
    with op.batch_alter_table('proveedores', schema=None) as batch_op:
        batch_op.create_index(batch_op.f('ix_proveedores_nombre'), ['nombre'], unique=True)

    op.create_table('roles',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('nombre', sa.String(length=50), nullable=False),
    sa.PrimaryKeyConstraint('id')
    )
    with op.batch_alter_table('roles', schema=None) as batch_op:
        batch_op.create_index(batch_op.f('ix_roles_nombre'), ['nombre'], unique=True)

    op.create_table('sucursales',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('nombre', sa.String(length=100), nullable=False),
    sa.Column('telefono', sa.String(length=20), nullable=True),
    sa.Column('direccion', sa.Text(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('updated_at', sa.DateTime(), nullable=False),
    sa.Column('is_active', sa.Boolean(), nullable=False),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('telefono')
    )
    with op.batch_alter_table('sucursales', schema=None) as batch_op:
        batch_op.create_index(batch_op.f('ix_sucursales_nombre'), ['nombre'], unique=True)

    op.create_table('productos',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('nombre', sa.String(length=200), nullable=False),
    sa.Column('marca', sa.String(length=150), nullable=True),
    sa.Column('codigo_barras', sa.String(length=50), nullable=True),
    sa.Column('descripcion', sa.Text(), nullable=True),
    sa.Column('precio', sa.Numeric(precision=10, scale=2), nullable=False),
    sa.Column('costo', sa.Numeric(precision=10, scale=2), nullable=False),
    sa.Column('stock', sa.Integer(), nullable=False),
    sa.Column('fecha_vencimiento', sa.Date(), nullable=True),
    sa.Column('imagen', sa.String(), nullable=True),
    sa.Column('sucursal_id', sa.Integer(), nullable=True),
    sa.Column('categoria_id', sa.Integer(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('updated_at', sa.DateTime(), nullable=False),
    sa.Column('is_active', sa.Boolean(), nullable=False),
    sa.CheckConstraint('costo >= 0', name='check_costo_no_negativo'),
    sa.CheckConstraint('precio >= 0', name='check_precio_no_negativo'),
    sa.CheckConstraint('stock >= 0', name='check_stock_no_negativo'),
    sa.ForeignKeyConstraint(['categoria_id'], ['categorias_productos.id'], ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['sucursal_id'], ['sucursales.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('codigo_barras')
    )
    with op.batch_alter_table('productos', schema=None) as batch_op:
        batch_op.create_index(batch_op.f('ix_productos_nombre'), ['nombre'], unique=True)

    op.create_table('usuarios',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('nombre', sa.String(length=150), nullable=False),
    sa.Column('usuario', sa.String(length=15), nullable=False),
    sa.Column('password', sa.String(length=100), nullable=False),
    sa.Column('telefono', sa.String(length=20), nullable=True),
    sa.Column('correo', sa.String(length=50), nullable=True),
    sa.Column('sucursal_id', sa.Integer(), nullable=True),
    sa.Column('rol_id', sa.Integer(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('updated_at', sa.DateTime(), nullable=False),
    sa.Column('is_active', sa.Boolean(), nullable=False),
    sa.ForeignKeyConstraint(['rol_id'], ['roles.id'], ),
    sa.ForeignKeyConstraint(['sucursal_id'], ['sucursales.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('correo'),
    sa.UniqueConstraint('telefono')
    )
    with op.batch_alter_table('usuarios', schema=None) as batch_op:
        batch_op.create_index(batch_op.f('ix_usuarios_usuario'), ['usuario'], unique=True)

    op.create_table('ajustes_inventario',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('motivo', sa.String(length=200), nullable=False),
    sa.Column('cantidad_ajustada', sa.Integer(), nullable=False),
    sa.Column('fecha', sa.DateTime(), nullable=True),
    sa.Column('usuario_id', sa.Integer(), nullable=True),
    sa.Column('producto_id', sa.Integer(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('updated_at', sa.DateTime(), nullable=False),
    sa.CheckConstraint('cantidad_ajustada != 0', name='check_cantidad_ajustada_no_cero'),
    sa.ForeignKeyConstraint(['producto_id'], ['productos.id'], ),
    sa.ForeignKeyConstraint(['usuario_id'], ['usuarios.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('compras',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('fecha', sa.DateTime(), nullable=True),
    sa.Column('total', sa.Numeric(precision=12, scale=2), nullable=False),
    sa.Column('proveedor_id', sa.Integer(), nullable=True),
    sa.Column('usuario_id', sa.Integer(), nullable=True),
    sa.Column('sucursal_id', sa.Integer(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('updated_at', sa.DateTime(), nullable=False),
    sa.ForeignKeyConstraint(['proveedor_id'], ['proveedores.id'], ),
    sa.ForeignKeyConstraint(['sucursal_id'], ['sucursales.id'], ),
    sa.ForeignKeyConstraint(['usuario_id'], ['usuarios.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    with op.batch_alter_table('compras', schema=None) as batch_op:
        batch_op.create_index(batch_op.f('ix_compras_fecha'), ['fecha'], unique=False)

    op.create_table('movimientos_inventario',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('tipo', sa.Enum('ENTRADA', 'SALIDA', name='tipomovimientoenum'), nullable=False),
    sa.Column('cantidad', sa.Integer(), nullable=False),
    sa.Column('referencia', sa.String(length=200), nullable=True),
    sa.Column('fecha', sa.DateTime(), nullable=True),
    sa.Column('usuario_id', sa.Integer(), nullable=True),
    sa.Column('producto_id', sa.Integer(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('updated_at', sa.DateTime(), nullable=False),
    sa.CheckConstraint('cantidad > 0', name='check_cantidad_movimiento_positiva'),
    sa.ForeignKeyConstraint(['producto_id'], ['productos.id'], ),
    sa.ForeignKeyConstraint(['usuario_id'], ['usuarios.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    with op.batch_alter_table('movimientos_inventario', schema=None) as batch_op:
        batch_op.create_index(batch_op.f('ix_movimientos_inventario_fecha'), ['fecha'], unique=False)

    op.create_table('ventas',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('fecha', sa.DateTime(), nullable=True),
    sa.Column('estado', sa.Enum('PENDIENTE', 'COMPLETADA', 'ANULADA', name='estadoventaenum'), nullable=False),
    sa.Column('total', sa.Numeric(precision=10, scale=2), nullable=False),
    sa.Column('usuario_id', sa.Integer(), nullable=True),
    sa.Column('cliente_id', sa.Integer(), nullable=True),
    sa.Column('forma_pago_id', sa.Integer(), nullable=True),
    sa.Column('sucursal_id', sa.Integer(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('updated_at', sa.DateTime(), nullable=False),
    sa.ForeignKeyConstraint(['cliente_id'], ['clientes.id'], ),
    sa.ForeignKeyConstraint(['forma_pago_id'], ['formas_pago.id'], ),
    sa.ForeignKeyConstraint(['sucursal_id'], ['sucursales.id'], ),
    sa.ForeignKeyConstraint(['usuario_id'], ['usuarios.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    with op.batch_alter_table('ventas', schema=None) as batch_op:
        batch_op.create_index(batch_op.f('ix_ventas_fecha'), ['fecha'], unique=False)

    op.create_table('detalle_compras',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('cantidad', sa.Integer(), nullable=False),
    sa.Column('precio_unitario', sa.Numeric(precision=10, scale=2), nullable=False),
    sa.Column('subtotal', sa.Numeric(precision=12, scale=2), nullable=False),
    sa.Column('compra_id', sa.Integer(), nullable=True),
    sa.Column('producto_id', sa.Integer(), nullable=True),
    sa.CheckConstraint('cantidad > 0', name='check_cantidad_compra_positiva'),
    sa.ForeignKeyConstraint(['compra_id'], ['compras.id'], ),
    sa.ForeignKeyConstraint(['producto_id'], ['productos.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('detalle_ventas',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('cantidad', sa.Integer(), nullable=False),
    sa.Column('precio_unitario', sa.Numeric(precision=10, scale=2), nullable=False),
    sa.Column('subtotal', sa.Numeric(precision=12, scale=2), nullable=False),
    sa.Column('venta_id', sa.Integer(), nullable=True),
    sa.Column('producto_id', sa.Integer(), nullable=True),
    sa.CheckConstraint('cantidad > 0', name='check_cantidad_venta_positiva'),
    sa.ForeignKeyConstraint(['producto_id'], ['productos.id'], ),
    sa.ForeignKeyConstraint(['venta_id'], ['ventas.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('facturas',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('numero_factura', sa.String(length=50), nullable=False),
    sa.Column('tipo', sa.Enum('BOLETA', 'FACTURA', 'TICKET', name='tipofacturaenum'), nullable=False),
    sa.Column('fecha', sa.DateTime(), nullable=True),
    sa.Column('venta_id', sa.Integer(), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('updated_at', sa.DateTime(), nullable=False),
    sa.ForeignKeyConstraint(['venta_id'], ['ventas.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    with op.batch_alter_table('facturas', schema=None) as batch_op:
        batch_op.create_index(batch_op.f('ix_facturas_fecha'), ['fecha'], unique=False)
        batch_op.create_index(batch_op.f('ix_facturas_numero_factura'), ['numero_factura'], unique=True)

    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    with op.batch_alter_table('facturas', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('ix_facturas_numero_factura'))
        batch_op.drop_index(batch_op.f('ix_facturas_fecha'))

    op.drop_table('facturas')
    op.drop_table('detalle_ventas')
    op.drop_table('detalle_compras')
    with op.batch_alter_table('ventas', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('ix_ventas_fecha'))

    op.drop_table('ventas')
    with op.batch_alter_table('movimientos_inventario', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('ix_movimientos_inventario_fecha'))

    op.drop_table('movimientos_inventario')
    with op.batch_alter_table('compras', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('ix_compras_fecha'))

    op.drop_table('compras')
    op.drop_table('ajustes_inventario')
    with op.batch_alter_table('usuarios', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('ix_usuarios_usuario'))

    op.drop_table('usuarios')
    with op.batch_alter_table('productos', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('ix_productos_nombre'))

    op.drop_table('productos')
    with op.batch_alter_table('sucursales', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('ix_sucursales_nombre'))

    op.drop_table('sucursales')
    with op.batch_alter_table('roles', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('ix_roles_nombre'))

    op.drop_table('roles')
    with op.batch_alter_table('proveedores', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('ix_proveedores_nombre'))

    op.drop_table('proveedores')
    with op.batch_alter_table('formas_pago', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('ix_formas_pago_tipo'))

    op.drop_table('formas_pago')
    with op.batch_alter_table('clientes', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('ix_clientes_nombre'))

    op.drop_table('clientes')
    with op.batch_alter_table('categorias_productos', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('ix_categorias_productos_nombre'))

    op.drop_table('categorias_productos')
    # ### end Alembic commands ###
